/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Reports;

import Students.DbConnect;
import java.sql.*;
import java.util.logging.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.*;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Start_a_Way
 */
public class Reports extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    /**
     * Creates new form Reports
     */
    public Reports() {
        super("Reports");
        initComponents();
        conn = new DbConnect().DbConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stock = new javax.swing.JButton();
        borrowedBks = new javax.swing.JButton();
        returnedBks = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stock.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        stock.setText("Library Stock");
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });

        borrowedBks.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        borrowedBks.setText("Borrowed Books");
        borrowedBks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowedBksActionPerformed(evt);
            }
        });

        returnedBks.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        returnedBks.setText("Returned Books");
        returnedBks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnedBksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(returnedBks)
                    .addComponent(stock))
                .addContainerGap(164, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(borrowedBks)
                    .addContainerGap(157, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stock)
                .addGap(86, 86, 86)
                .addComponent(returnedBks)
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addComponent(borrowedBks)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(416, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        try {
            JasperDesign jd = JRXmlLoader.load("D:\\Java projects\\School "
                    + "Manager\\src\\Reports\\Books.jrxml");

            String query = "SELECT\n"
                    + "     book.`libraryNumber` AS book_libraryNumber,\n"
                    + "     book.`ISBN` AS book_ISBN,\n"
                    + "     book.`Title` AS book_Title,\n"
                    + "     book.`Author` AS book_Author,\n"
                    + "     book.`Subject` AS book_Subject,\n"
                    + "     book.`Year` AS book_Year\n"
                    + "FROM\n"
                    + "     `book` book";
            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(query);
            jd.setQuery(updateQuery);

            JasperReport jreport = JasperCompileManager.compileReport(jd);
            JasperPrint jprint = JasperFillManager.fillReport(jreport, null, conn);

            JasperViewer.viewReport(jprint);
        } catch (JRException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stockActionPerformed

    private void borrowedBksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowedBksActionPerformed
        try {
            JasperDesign jd = JRXmlLoader.load("D:\\Java projects\\School"
                    + " Manager\\src\\Reports\\Borrowed.jrxml");

            String query = "SELECT\n"
                    + "     borrow_book.`admNo` AS borrow_book_admNo,\n"
                    + "     borrow_book.`Name` AS borrow_book_Name,\n"
                    + "     borrow_book.`Form` AS borrow_book_Form,\n"
                    + "     borrow_book.`Stream` AS borrow_book_Stream,\n"
                    + "     borrow_book.`libraryNumber` AS borrow_book_libraryNumber,\n"
                    + "     borrow_book.`Title` AS borrow_book_Title,\n"
                    + "     borrow_book.`Availability` AS borrow_book_Availability,\n"
                    + "     borrow_book.`borrowID` AS borrow_book_borrowID\n"
                    + "FROM\n"
                    + "     `borrow_book` borrow_book";
            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(query);
            jd.setQuery(updateQuery);

            JasperReport jreport = JasperCompileManager.compileReport(jd);
            JasperPrint jprint = JasperFillManager.fillReport(jreport, null, conn);

            JasperViewer.viewReport(jprint);
        } catch (JRException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_borrowedBksActionPerformed

    private void returnedBksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnedBksActionPerformed
         try {
            JasperDesign jd = JRXmlLoader.load("D:\\Java projects\\School "
                    + "Manager\\src\\Reports\\Returned.jrxml");

            String query = "SELECT\n" +
"     return_book.`returnID` AS return_book_returnID,\n" +
"     return_book.`admNo` AS return_book_admNo,\n" +
"     return_book.`Form` AS return_book_Form,\n" +
"     return_book.`Stream` AS return_book_Stream,\n" +
"     return_book.`returnDate` AS return_book_returnDate,\n" +
"     return_book.`libraryNumber` AS return_book_libraryNumber,\n" +
"     return_book.`Title` AS return_book_Title\n" +
"FROM\n" +
"     `return_book` return_book";
            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(query);
            jd.setQuery(updateQuery);

            JasperReport jreport = JasperCompileManager.compileReport(jd);
            JasperPrint jprint = JasperFillManager.fillReport(jreport, null, conn);

            JasperViewer.viewReport(jprint);
        } catch (JRException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_returnedBksActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Reports().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrowedBks;
    private javax.swing.JButton returnedBks;
    private javax.swing.JButton stock;
    // End of variables declaration//GEN-END:variables
}
